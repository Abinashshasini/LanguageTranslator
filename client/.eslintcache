[{"C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\index.js":"1","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\App.js":"2","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\components\\Home\\Navbar.js":"3","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\components\\Home\\Header.js":"4","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\components\\Translate\\Translate.js":"5","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\components\\Home\\Footer.js":"6","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\components\\Translate\\data.js":"7","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\store.js":"8","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\reducers\\index.js":"9","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\reducers\\alert.js":"10","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\actions\\type.js":"11","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\actions\\alert.js":"12","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\components\\Home\\ErrorMsg.js":"13","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\reducers\\translate.js":"14","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\actions\\translate.js":"15","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\components\\Translate\\TranslateItem.js":"16","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\components\\Home\\Progress.js":"17","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\components\\Home\\About.js":"18","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\components\\Home\\Feedback.js":"19"},{"size":219,"mtime":1610115458126,"results":"20","hashOfConfig":"21"},{"size":1126,"mtime":1610200355130,"results":"22","hashOfConfig":"21"},{"size":3977,"mtime":1610200376340,"results":"23","hashOfConfig":"21"},{"size":615,"mtime":1610175510111,"results":"24","hashOfConfig":"21"},{"size":3440,"mtime":1610202208619,"results":"25","hashOfConfig":"21"},{"size":604,"mtime":1610199223121,"results":"26","hashOfConfig":"21"},{"size":2384,"mtime":1610204821531,"results":"27","hashOfConfig":"21"},{"size":399,"mtime":1609998344833,"results":"28","hashOfConfig":"21"},{"size":173,"mtime":1610081081841,"results":"29","hashOfConfig":"21"},{"size":386,"mtime":1610004829772,"results":"30","hashOfConfig":"21"},{"size":222,"mtime":1610113678218,"results":"31","hashOfConfig":"21"},{"size":349,"mtime":1610006865359,"results":"32","hashOfConfig":"21"},{"size":507,"mtime":1610006077071,"results":"33","hashOfConfig":"21"},{"size":712,"mtime":1610168811357,"results":"34","hashOfConfig":"21"},{"size":662,"mtime":1610122244601,"results":"35","hashOfConfig":"21"},{"size":1242,"mtime":1610122015435,"results":"36","hashOfConfig":"21"},{"size":602,"mtime":1610123767545,"results":"37","hashOfConfig":"21"},{"size":694,"mtime":1610201752107,"results":"38","hashOfConfig":"21"},{"size":251,"mtime":1610201553980,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"izufw4",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\index.js",[],["87","88"],"C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\App.js",[],"C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\components\\Home\\Navbar.js",["89","90"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport LiveHelpIcon from \"@material-ui/icons/LiveHelp\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\r\nimport logo from \"../../assets/logo/icon.png\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: \"55px\",\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  buttonicon: {\r\n    color: \"#34435f\",\r\n  },\r\n  links: {\r\n    textDecoration: \"none\",\r\n    color: \" Black\",\r\n  },\r\n  applogo: {\r\n    margin: \"auto\",\r\n    textAlign: \"center\",\r\n  },\r\n  applogoImg: {\r\n    width: \"45px\",\r\n    height: \"40px\",\r\n    marginRight: \"55px\",\r\n  },\r\n});\r\n\r\nconst Navbar = (props) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role='presentation'\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <div>\r\n        <Divider />\r\n        <List component='nav' aria-label='main mailbox folders'>\r\n          <Link to='/' className={classes.links}>\r\n            <ListItem button key={1}>\r\n              <ListItemIcon>\r\n                <HomeIcon fontSize='small' className={classes.buttonicon} />\r\n              </ListItemIcon>\r\n              Home\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n        <Divider />\r\n        <List component='nav' aria-label='main mailbox folders'>\r\n          <Link to='/about' className={classes.links}>\r\n            <ListItem button key={2}>\r\n              <ListItemIcon>\r\n                <InfoIcon fontSize='small' className={classes.buttonicon} />\r\n              </ListItemIcon>\r\n              About US\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to='/feedback' className={classes.links}>\r\n            <ListItem button key={4}>\r\n              <ListItemIcon>\r\n                <FeedbackIcon fontSize='small' className={classes.buttonicon} />\r\n              </ListItemIcon>\r\n              Feedback\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {[\"left\"].map((anchor) => (\r\n        <AppBar position='static' color='default'>\r\n          <Toolbar className={classes.root} variant='dense'>\r\n            <React.Fragment key={anchor}>\r\n              <Button onClick={toggleDrawer(anchor, true)}>\r\n                <MenuIcon />\r\n              </Button>\r\n              <Drawer\r\n                anchor={anchor}\r\n                open={state[anchor]}\r\n                onClose={toggleDrawer(anchor, false)}\r\n              >\r\n                {list(anchor)}\r\n              </Drawer>\r\n            </React.Fragment>\r\n            <div className={classes.applogo}>\r\n              <img src={logo} className={classes.applogoImg} />\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Navbar;\r\n","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\components\\Home\\Header.js",["91"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport image from \"../../assets/image/trans2.png\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className='container'>\r\n      <h3 className='H1'>Language Translator App</h3>\r\n      <div className='head'>\r\n        <img src={image} className='headImage' />\r\n      </div>\r\n      <Link to='/translate' className='LinkButton'>\r\n        <Button variant='contained' color='primary' size='large'>\r\n          Let's Translate\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\components\\Translate\\Translate.js",["92","93","94"],"import React, { Fragment, useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport data from \"./data\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport PropTypes from \"prop-types\";\r\nimport { translationResult } from \"../../actions/translate\";\r\nimport TranslateItem from \"./TranslateItem\";\r\nimport \"../../App.css\";\r\n\r\nconst Translate = ({ setAlert, translationResult }) => {\r\n  const [formData, setFormData] = useState({\r\n    text: \" \",\r\n    modelId: \" \",\r\n  });\r\n  const { text, modelId } = formData;\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (text == \" \" && modelId == 0) {\r\n      setAlert(\"Invalid Credential\", \"danger\");\r\n    } else if (modelId == 0) {\r\n      setAlert(\"Please Select The Language\", \"danger\");\r\n    } else if (text === null) {\r\n      setAlert(\"Please Input some TEXT\", \"danger\");\r\n    } else {\r\n      translationResult(formData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='container'>\r\n        <h3 className='H1'>Translate English To Other Languages</h3>\r\n        <form className='TranslateContainer' onSubmit={(e) => onSubmit(e)}>\r\n          <div>\r\n            <div className='languageDiv'>\r\n              <div>\r\n                <select\r\n                  name='Direct Language'\r\n                  id='find-us'\r\n                  className='ChoseButton'\r\n                >\r\n                  <option value='English' defaultValue>\r\n                    English\r\n                  </option>\r\n                </select>\r\n              </div>\r\n              <div className='textDiv'>\r\n                <textarea\r\n                  id='text'\r\n                  name='text'\r\n                  className='textarea'\r\n                  value={text}\r\n                  onChange={(e) => onChange(e)}\r\n                  placeholder='Input Your Text'\r\n                  maxLength='100'\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n            <div className='languageDiv'>\r\n              <div>\r\n                <select\r\n                  name='modelId'\r\n                  value={modelId}\r\n                  className='ChoseButton'\r\n                  onChange={(e) => onChange(e)}\r\n                >\r\n                  {data.map((d) => (\r\n                    <option key={d.id} value={d.languageid}>\r\n                      {d.language}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <TranslateItem />\r\n            </div>\r\n          </div>\r\n          <div className='button'>\r\n            <Button\r\n              size='small'\r\n              variant='contained'\r\n              color='primary'\r\n              type='submit'\r\n            >\r\n              Translate\r\n            </Button>\r\n          </div>\r\n        </form>\r\n        <p className='para'>\r\n          Some English Words can't be translated to other languages Because of\r\n          the limitation in the IBM Api(Free Version)\r\n        </p>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nTranslate.prototype = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  translationResult: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  translate: state.translate,\r\n});\r\nexport default connect(mapStateToProps, { setAlert, translationResult })(\r\n  Translate\r\n);\r\n","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\components\\Home\\Footer.js",[],"C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\components\\Translate\\data.js",[],"C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\store.js",[],"C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\reducers\\index.js",[],"C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\reducers\\alert.js",["95"],"import { SET_ALERT, REMOVE_ALERT } from \"../actions/type\";\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\actions\\type.js",[],"C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\actions\\alert.js",[],"C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\components\\Home\\ErrorMsg.js",[],"C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\reducers\\translate.js",["96"],"import { CLEAR_REQ, GET_TRANSLATE, TRANSLATE_ERROR } from \"../actions/type\";\r\n\r\nconst initialState = {\r\n  translate: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_TRANSLATE:\r\n      return {\r\n        ...state,\r\n        translate: payload,\r\n        loading: false,\r\n      };\r\n    case TRANSLATE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case CLEAR_REQ:\r\n      return {\r\n        ...state,\r\n        translate: null,\r\n        loading: true,\r\n        error: {},\r\n      };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n",["97","98"],"C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\actions\\translate.js",[],"C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\components\\Translate\\TranslateItem.js",["99"],"import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport ProgressBar from \"../Home/Progress\";\r\nimport { translationResult } from \"../../actions/translate\";\r\nconst TranslateItem = ({\r\n  translationResult,\r\n  translate: { translate, loading },\r\n}) => {\r\n  useEffect(() => {\r\n    translationResult();\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <ProgressBar />\r\n      ) : (\r\n        <Fragment>\r\n          <div style={textDiv}>\r\n            <textarea\r\n              name='Translated-Text'\r\n              placeholder='Translated Text'\r\n              style={textArea}\r\n            >\r\n              {translate}\r\n            </textarea>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\nconst textDiv = {\r\n  marginRight: \"2px\",\r\n};\r\nconst textArea = {\r\n  width: \"95%\",\r\n  padding: \"7px\",\r\n  borderRadius: \"3px\",\r\n  height: \"100px\",\r\n};\r\n\r\nTranslateItem.propTypes = {\r\n  translationResult: PropTypes.func.isRequired,\r\n  translate: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  translate: state.translate,\r\n});\r\nexport default connect(mapStateToProps, { translationResult })(TranslateItem);\r\n","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\components\\Home\\Progress.js",[],"C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\components\\Home\\About.js",["100"],"import React, { Fragment } from \"react\";\r\nimport image from \"../../assets/image/trans1.gif\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className='container'>\r\n        <h3 className='H1'>About Language Translator</h3>\r\n        <div className='head1'>\r\n          <img src={image} className='headImage1' />\r\n        </div>\r\n        <p className='para'>\r\n          Human beings take about a year to learn a language but computers can\r\n          learn in a day. In this project, we build a language translator web\r\n          application that can translate from English to over 25+ languages.{\" \"}\r\n        </p>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default About;\r\n","C:\\Users\\Abinash\\Desktop\\language-translator\\client\\src\\components\\Home\\Feedback.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":13,"column":8,"nodeType":"107","messageId":"108","endLine":13,"endColumn":20},{"ruleId":"109","severity":1,"message":"110","line":130,"column":15,"nodeType":"111","endLine":130,"endColumn":64},{"ruleId":"109","severity":1,"message":"110","line":11,"column":9,"nodeType":"111","endLine":11,"endColumn":50},{"ruleId":"112","severity":1,"message":"113","line":22,"column":14,"nodeType":"114","messageId":"115","endLine":22,"endColumn":16},{"ruleId":"112","severity":1,"message":"113","line":22,"column":32,"nodeType":"114","messageId":"115","endLine":22,"endColumn":34},{"ruleId":"112","severity":1,"message":"113","line":24,"column":24,"nodeType":"114","messageId":"115","endLine":24,"endColumn":26},{"ruleId":"116","severity":1,"message":"117","line":4,"column":1,"nodeType":"118","endLine":14,"endColumn":2},{"ruleId":"116","severity":1,"message":"117","line":9,"column":1,"nodeType":"118","endLine":36,"endColumn":2},{"ruleId":"101","replacedBy":"119"},{"ruleId":"103","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":12,"column":6,"nodeType":"123","endLine":12,"endColumn":8,"suggestions":"124"},{"ruleId":"109","severity":1,"message":"110","line":10,"column":11,"nodeType":"111","endLine":10,"endColumn":53},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'LiveHelpIcon' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["125"],["126"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'translationResult'. Either include it or remove the dependency array. If 'translationResult' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["127"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},"Update the dependencies array to be: [translationResult]",{"range":"130","text":"131"},[384,386],"[translationResult]"]